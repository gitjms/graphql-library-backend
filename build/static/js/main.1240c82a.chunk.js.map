{"version":3,"sources":["queries.js","components/BirthyearForm.js","components/Togglable.js","components/Authors.js","components/Button.js","components/Books.js","components/BookForm.js","components/Footer.js","components/Notification.js","components/LoginForm.js","components/UserForm.js","components/Recommended.js","App.js","index.js"],"names":["AUTHOR_DETAILS","gql","CURRENT_USER","FAVORITE_BOOKS","ALL_AUTHORS","ALL_BOOKS","ADD_BOOK","BOOK_ADDED","EDIT_AUTHOR","AUTHOR_EDITED","LOGIN","SIGNUP","BirthyearForm","props","scroller","require","animateScroll","options","authors","map","a","value","name","label","useState","author","setAuthor","born","setBirthyear","useMutation","onError","error","setError","graphQLErrors","message","update","store","response","updateAuthorCacheWith","data","editAuthor","setAuthorupdateCache","refetchQueries","query","submit","event","preventDefault","variables","setBornTo","Number","scrollToTop","data-toggle","data-placement","title","aria-label","onSubmit","className","onChange","val","style","width","type","target","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","role","onClick","buttonLabel","children","closeLabel","displayName","Authors","birthyearFormRef","useRef","show","authorUpdateCache","length","allAuthors","padding","paddingRight","alignRight","float","key","bookCount","token","notify","notifyError","Button","genre","setGenre","id","Books","useLazyQuery","optedGenre","getGenreBooks","resultBooks","genreBooks","setGenreBooks","getUpdatedBooks","resultUpdatedBooks","updatedBooks","setUpdatedBooks","useEffect","allBooks","bookUpdateCache","loading","icon","faSpinner","size","booksToShow","concat","genres","genreItems","b","filter","g","push","Set","v","i","published","indexOf","BookForm","setTitle","setPublished","setGenres","updateBookCacheWith","addBook","autoFocus","fontFamily","join","Footer","color","fontStyle","fontSize","Notify","background","borderStyle","borderRadius","marginTop","marginBottom","NotifyError","LoginForm","username","setUsername","password","setPassword","result","window","alert","login","setToken","localStorage","setItem","setPage","UserForm","favoriteGenre","setFavGenre","createUser","Recommended","rightPadding","favoriteBooks","App","client","useApolloClient","allAuthorsResult","useQuery","allBooksResult","setAllAuthors","setAllBooks","getItem","setMessage","errorMessage","setErrorMessage","page","getFavoriteBooks","setFavoriteBooks","getUser","resultUser","setFavoriteGenre","setBookupdateCache","me","favorites","addedBook","set","object","dataInStore","readQuery","p","includes","writeQuery","editedAuthors","useSubscription","onSubscriptionData","subscriptionData","bookAdded","editedAuthor","authorEdited","setTimeout","spin","href","faHome","clear","clearStore","faSignOutAlt","faSignInAlt","faUserPlus","authLink","setContext","_","headers","authorization","httpLink","HttpLink","uri","wsLink","WebSocketLink","reconnect","splitLink","split","definition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","link","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1240c82a.chunk.js","sourcesContent":["import { gql  } from '@apollo/client'\r\n\r\n\r\nconst AUTHOR_DETAILS = gql`\r\nfragment authorDetails on Author {\r\n  id\r\n  name\r\n  born\r\n  bookCount\r\n}\r\n`\r\n\r\nexport const CURRENT_USER = gql`\r\n  query {\r\n    me {\r\n      favoriteGenre\r\n    }\r\n  }\r\n`\r\n\r\nexport const FAVORITE_BOOKS = gql`\r\n  query {\r\n    favorites {\r\n      title\r\n      author {\r\n      ...authorDetails\r\n      }\r\n      published\r\n      genres\r\n    }\r\n  }\r\n  ${AUTHOR_DETAILS}\r\n`\r\n\r\nexport const ALL_AUTHORS = gql`\r\n  query {\r\n    allAuthors {\r\n      ...authorDetails\r\n    }\r\n  }\r\n  ${AUTHOR_DETAILS}\r\n`\r\nexport const ALL_BOOKS = gql`\r\n  query allBooks($author: String, $genre: String){\r\n    allBooks(author: $author, genre: $genre) { \r\n      title\r\n      author {\r\n        ...authorDetails\r\n      }\r\n      published\r\n      genres\r\n    }\r\n  }\r\n  ${AUTHOR_DETAILS}\r\n`\r\n\r\nexport const ADD_BOOK = gql`\r\n  mutation addBook($title: String!, $author:String!, $published:Int!, $genres:[String!]!) {\r\n    addBook(\r\n      title: $title,\r\n      author: $author,\r\n      published: $published,\r\n      genres: $genres\r\n    ){\r\n      title,\r\n      author {\r\n        ...authorDetails\r\n      }\r\n    }\r\n  }\r\n  ${AUTHOR_DETAILS}\r\n`\r\n\r\nexport const BOOK_ADDED = gql`\r\n  subscription {\r\n    bookAdded {\r\n      title\r\n      author {\r\n        ...authorDetails\r\n      }\r\n      published\r\n      genres\r\n    }\r\n  }\r\n${AUTHOR_DETAILS}\r\n`\r\n\r\nexport const EDIT_AUTHOR = gql`\r\n  mutation editAuthor($name: String!, $setBornTo: Int!){\r\n    editAuthor(\r\n      name: $name,\r\n      setBornTo: $setBornTo\r\n    ) {\r\n      ...authorDetails\r\n    }\r\n  }\r\n  ${AUTHOR_DETAILS}\r\n`\r\n\r\nexport const AUTHOR_EDITED = gql`\r\n  subscription {\r\n    authorEdited {\r\n      ...authorDetails\r\n    }\r\n  }\r\n${AUTHOR_DETAILS}\r\n`\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password)  {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nexport const SIGNUP = gql`\r\n  mutation createUser($username: String!, $favoriteGenre: String!, $password: String!){\r\n    createUser(\r\n      username: $username,\r\n      favoriteGenre: $favoriteGenre,\r\n      password: $password\r\n    ) {\r\n      value\r\n    }\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport Select from 'react-select'\r\nimport { EDIT_AUTHOR, ALL_AUTHORS } from '../queries'\r\n\r\nconst BirthyearForm = (props) => {\r\n\r\n  const Scroll = require('react-scroll')\r\n  const scroller = Scroll.animateScroll\r\n\r\n  const options = props.authors.map( a => {\r\n    return {\r\n      value: a.name,\r\n      label: a.name\r\n    }\r\n  })\r\n\r\n  const [author, setAuthor] = useState('')\r\n  const [born, setBirthyear] = useState('')\r\n\r\n  const [ editAuthor ] = useMutation(EDIT_AUTHOR, {\r\n    onError: (error) => {\r\n      props.setError(error.graphQLErrors[0] ? error.graphQLErrors[0].message : error.message)\r\n    },\r\n    update: (store, response) => {\r\n      props.updateAuthorCacheWith(response.data.editAuthor)\r\n      props.setAuthorupdateCache(response.data.editAuthor)\r\n    },\r\n    refetchQueries: [ { query: ALL_AUTHORS } ]\r\n  })\r\n\r\n  const submit = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (author !== '' && born !== '') {\r\n      editAuthor({ variables: { name: author, setBornTo: Number(born) } })\r\n\r\n      setBirthyear('')\r\n      setAuthor('')\r\n      scroller.scrollToTop()\r\n    }\r\n  }\r\n\r\n  const authorChange = (val) => {\r\n    setAuthor(val.value)\r\n  }\r\n\r\n  const width = {\r\n    width: '50px'\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h3 data-toggle='tooltip' data-placement='top' title='set birthyear' aria-label='set birthyear'>\r\n        set birthyear\r\n      </h3>\r\n      <form onSubmit={submit}>\r\n        <div>\r\n          <Select className='form-control'\r\n            value={author.value}\r\n            options={options}\r\n            onChange={authorChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <div className='form-group'>\r\n          <label style={width}>born:</label>\r\n          <input\r\n            type='number'\r\n            value={born}\r\n            onChange={({ target }) => setBirthyear(target.value)}\r\n            data-toggle='tooltip' data-placement='top' title='set birthyear' aria-label='set birthyear'\r\n          />\r\n          <button className='btn btn-raised btn-primary ml-2' type='submit'\r\n            data-toggle='tooltip' data-placement='top' title='update author' aria-label='update author'>\r\n            update author\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BirthyearForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n\r\n  Togglable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n  }\r\n\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n    if (visible) {\r\n    }\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='btn-group' role='group'>\r\n      <div style={hideWhenVisible}>\r\n        <button className='btn btn-raised btn-primary'type='submit'\r\n          onClick={toggleVisibility}\r\n          data-toggle='tooltip' data-placement='top' title={props.buttonLabel} aria-label={props.buttonLabel}>\r\n          {props.buttonLabel}\r\n        </button>\r\n      </div>\r\n      <div style={showWhenVisible} className='togglableContent'>\r\n        {props.children}\r\n        <button className='btn btn-raised btn-primary'type='submit'\r\n          onClick={toggleVisibility}\r\n          data-toggle='tooltip' data-placement='top' title={props.closeLabel} aria-label={props.closeLabel}>\r\n          {props.closeLabel}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React, { useRef } from 'react'\nimport BirthyearForm from './BirthyearForm'\nimport Togglable from './Togglable'\n\nconst Authors = (props) => {\n\n  const birthyearFormRef = useRef()\n\n  if (!props.show) {\n    return null\n  }\n\n  let authors = []\n  if(props.authorUpdateCache.length === 0) {\n    authors = props.allAuthors\n  } else {\n    authors = props.authorUpdateCache\n  }\n\n  const setBirthyear = () => (\n    <Togglable buttonLabel='Set birthyear' closeLabel='close' ref={birthyearFormRef}>\n      <BirthyearForm\n        authors={authors}\n        notify={props.notify}\n        setError={props.notifyError}\n        updateAuthorCacheWith={props.updateAuthorCacheWith}\n        setAuthorupdateCache={props.setAuthorupdateCache}\n      />\n    </Togglable>\n  )\n\n  const padding = {\n    paddingRight: '10px'\n  }\n\n  const alignRight = {\n    float: 'right'\n  }\n\n  return (\n    <>\n      <div>\n        <br />\n        <h2 data-toggle='tooltip' data-placement='top' title='authors page' aria-label='authors page'>\n          authors\n        </h2>\n        <table>\n          <tbody>\n            <tr>\n              <th></th>\n              <th style={padding}\n                data-toggle='tooltip' data-placement='top' title='born' aria-label='born'>\n                born\n              </th>\n              <th data-toggle='tooltip' data-placement='top' title='books' aria-label='books'>\n                books\n              </th>\n            </tr>\n            {authors.map(a =>\n              <tr key={a.name}>\n                <td style={padding}\n                  data-toggle='tooltip' data-placement='top' title={a.name} aria-label={a.name}>\n                  {a.name}\n                </td>\n                <td style={padding}\n                  data-toggle='tooltip' data-placement='top' title={a.born} aria-label={a.born}>\n                  {a.born}\n                </td>\n                <td style={alignRight}\n                  data-toggle='tooltip' data-placement='top' title={a.bookCount} aria-label={a.bookCount}>\n                  {a.bookCount}\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {props.token &&\n        <div>\n          {setBirthyear()}\n        </div>\n      }\n    </>\n  )\n}\n\nexport default Authors\n","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n  return(\r\n    <button type='button' className='btn btn-raised btn-warning mr-1'\r\n      value={props.genre}\r\n      onClick={() => {\r\n        props.setGenre(props.genre)\r\n      }}\r\n      id='genre-button'\r\n      data-toggle='tooltip' data-placement='top' title={props.genre} aria-label={props.genre}\r\n    >\r\n    {props.genre}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { useLazyQuery } from '@apollo/client'\nimport { ALL_BOOKS } from '../queries'\nimport Button from './Button'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nconst Books = (props) => {\n\n  const [getGenreBooks, resultBooks] = useLazyQuery(\n    ALL_BOOKS, { variables: { genre: props.optedGenre } })\n  const [genreBooks, setGenreBooks] = useState([])\n\n  const [getUpdatedBooks, resultUpdatedBooks] = useLazyQuery(ALL_BOOKS)\n  const [updatedBooks, setUpdatedBooks] = useState([])\n\n  useEffect(() => {\n    if (resultBooks.data) {\n      setGenreBooks(resultBooks.data.allBooks)\n    }\n  }, [resultBooks,props.optedGenre])\n\n  useEffect(() => {\n    if (props.optedGenre !== 'all') {\n      getGenreBooks()\n    }\n  }, [getGenreBooks,props.optedGenre])\n\n  useEffect(() => {\n    if (resultUpdatedBooks.data) {\n      setUpdatedBooks(resultUpdatedBooks.data.allBooks)\n    }\n  }, [resultUpdatedBooks])\n\n  useEffect(() => {\n    if (props.bookUpdateCache) {\n      getUpdatedBooks()\n    }\n  }, [getUpdatedBooks,props.bookUpdateCache])\n\n  if (!props.show) {\n    return null\n  }\n\n  if (resultBooks.loading || resultUpdatedBooks.loading)  {\n    return <div className='container'><br /><br /><br /><center>\n      <FontAwesomeIcon icon={faSpinner} size='5x'/></center></div>\n  }\n\n  let booksToShow = []\n  if (props.optedGenre === 'all') {\n    props.bookUpdateCache === null\n      ? booksToShow = props.allBooks\n      : booksToShow = updatedBooks.concat(props.bookUpdateCache)\n  } else {\n    booksToShow = genreBooks\n  }\n\n  let genres = []\n  let genreItems = []\n  booksToShow.map(b => b.genres.filter(g => genreItems.push(g)))\n  genres = [...new Set(genreItems)]\n\n  const options = genres.map(genre => {\n    return {\n      value: genre,\n      label: genre\n    }\n  })\n\n  const genreChange = (val) => {\n    props.setGenre(val.value)\n  }\n\n  const padding = {\n    paddingRight: '10px'\n  }\n\n  const alignRight = {\n    float: 'right'\n  }\n\n  return (\n    <div>\n      <br />\n      <h2 data-toggle='tooltip' data-placement='top' title='books page' aria-label='books page'>\n        books\n      </h2>\n      {props.optedGenre !== 'all' &&\n        <>in genre <b>{props.optedGenre}</b><br /><br /></>\n      }\n      <table>\n        <tbody>\n          <tr>\n            <th style={padding}></th>\n            <th style={padding}\n                data-toggle='tooltip' data-placement='top' title='author' aria-label='author'>\n              author\n            </th>\n            <th data-toggle='tooltip' data-placement='top' title='published' aria-label='published'>\n              published\n            </th>\n          </tr>\n          {booksToShow.map((b,v,i) =>\n            <tr key={v}>\n              <td style={padding}\n                data-toggle='tooltip' data-placement='top' title={b.title} aria-label={b.title}>\n                <em>{b.title}</em>\n              </td>\n              <td style={padding}\n                data-toggle='tooltip' data-placement='top' title={b.author.name} aria-label={b.author.name}>\n                {b.author.name}\n              </td>\n              <td style={alignRight}\n                data-toggle='tooltip' data-placement='top' title={b.published} aria-label={b.published}>\n                {b.published}\n              </td>\n            </tr>\n            )\n          }\n        </tbody>\n      </table><br />\n      {genres.map((g,v,i) =>\n          <Button genre={g} key={i.indexOf(g)} setGenre={props.setGenre} />\n      )}\n      {props.optedGenre !== 'all' &&\n        <button type='button' className='btn btn-raised btn-primary mr-1'\n          onClick={() => props.setGenre('all')}\n          id='genre-button'\n          data-toggle='tooltip' data-placement='top' title='all genres' aria-label='all genres'\n        >all genres\n        </button>\n      }\n      <br />\n      <div>\n      <br />\n        <Select\n          value={props.optedGenre}\n          options={options}\n          onChange={genreChange}\n        />\n      </div>\n      <br />\n    </div>\n  )\n}\n\nexport default Books\n","import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { ADD_BOOK, ALL_BOOKS, ALL_AUTHORS } from '../queries'\n\nconst BookForm = (props) => {\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n\n  const [ addBook ] = useMutation(ADD_BOOK, {\n    onError: (error) => {\n      props.notifyError(error.graphQLErrors[0] ? error.graphQLErrors[0].message : error.message)\n    },\n    update: (store, response) => {\n      props.updateBookCacheWith(response.data.addBook)\n    },\n    refetchQueries: [ { query: ALL_BOOKS }, { query: ALL_AUTHORS } ]\n  })\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    await addBook({ variables: { title,author,published: Number(published),genres } })\n\n    setTitle('')\n    setPublished('')\n    setAuthor('')\n    setGenres([])\n    setGenre('')\n  }\n\n  const addGenre = () => {\n    if (genre !== '') {\n      setGenres(genres.concat(genre))\n      setGenre('')\n    }\n  }\n\n  const width = {\n    width: '100px'\n  }\n\n  const fontStyle = {\n    fontFamily: 'Verdana, Geneva, Tahoma, sans-serif'\n  }\n\n  return (\n    <div className='col-auto'>\n      <br />\n      <h2 data-toggle='tooltip' data-placement='top' title='add book page' aria-label='add book page'>\n        add book\n      </h2>\n      <br />\n      <form onSubmit={submit}>\n        <div className='form-group'>\n          <label style={width}>title:</label>\n          <input autoFocus\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set title' aria-label='set title'\n          />\n        </div>\n        <div className='form-group'>\n          <label style={width}>author:</label>\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set author' aria-label='set author'\n          />\n        </div>\n        <div className='form-group'>\n          <label style={width}>published:</label>\n          <input\n            type='number'\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set published' aria-label='set published'\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set genre' aria-label='set genre'\n          />\n          <button className='btn btn-raised btn-primary ml-2' onClick={addGenre} type=\"button\"\n            data-toggle='tooltip' data-placement='top' title='add genre' aria-label='add genre'>\n            add genre\n          </button>\n        </div>\n        <div style={fontStyle}>\n          genres: {genres.join(' ')}\n        </div>\n        <button className='btn btn-raised btn-primary' type='submit'\n          data-toggle='tooltip' data-placement='top' title='submit' aria-label='submit'>\n          submit\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default BookForm\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'gray',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <hr />\r\n      <center>\r\n        <em>Bloglist app with GraphQL, Full Stack Web Development</em>\r\n        <br />\r\n        <em>University of Helsinki 2020</em>\r\n      </center>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nexport const Notify = ({ message }) => {\r\n  if ( !message ) {\r\n    return null\r\n  }\r\n\r\n  const messageStyle = {\r\n    color: 'green',\r\n    background: 'lightgray',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  return (\r\n    <div style={messageStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NotifyError = ({ message }) => {\r\n  if ( !message ) {\r\n    return null\r\n  }\r\n\r\n  const errorMessageStyle = {\r\n    color: 'rgb(255, 0, 0)',\r\n    background: 'lightgray',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  }\r\n\r\n  return (\r\n    <div style={errorMessageStyle}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { LOGIN } from '../queries'\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [ login, result ] = useMutation(LOGIN, {\n    onError: (error) => {\n      props.notifyError(error.graphQLErrors[0] ? error.graphQLErrors[0].message : error.message)\n      if (!result.data) {\n        window.alert(error.message)\n      }\n    }\n  })\n\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.login.value\n      props.setToken(token)\n      localStorage.setItem('library-user-token', token)\n    }\n  }, [result]) // eslint-disable-line\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    await login({ variables: { username, password } })\n      \n    props.setPage('authors')\n  }\n\n  const width = {\n    width: '100px'\n  }\n  \n  return (\n    <div className='col-auto'>\n      <br />\n      <h2 data-toggle='tooltip' data-placement='top' title='sign in page' aria-label='sign in page'>\n        sign in\n      </h2>\n      <form onSubmit={submit}>\n        <div className='form-group'>\n          <label style={width}>username:</label>\n          <input autoFocus\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set username' aria-label='set username'\n          />\n        </div>\n        <div className='form-group'>\n          <label style={width}>password:</label>\n          <input\n            type='password'\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set password' aria-label='set password'\n          />\n        </div>\n        <button className='btn btn-raised btn-primary mr-1' type='submit'\n          data-toggle='tooltip' data-placement='top' title='login' aria-label='login'>\n          login\n        </button>\n        <button className='btn btn-raised btn-primary' type='button' onClick={() => props.setPage('authors')}\n          data-toggle='tooltip' data-placement='top' title='cancel' aria-label='cancel'>\n          cancel\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React, { useState, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { SIGNUP } from '../queries'\n\nconst UserForm = (props) => {\n  const [username, setUsername] = useState('')\n  const [favoriteGenre, setFavGenre] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [ createUser, result ] = useMutation(SIGNUP, {\n    onError: (error) => {\n      props.notifyError(error.graphQLErrors[0] ? error.graphQLErrors[0].message : error.message)\n      if (!result.data) {\n        window.alert(error.message)\n      }\n    }\n  })\n\n  useEffect(() => {\n    if (result.data) {\n      const token = result.data.createUser.value\n      props.setToken(token)\n      localStorage.setItem('library-user-token', token)\n    }\n  }, [result]) // eslint-disable-line\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    await createUser({\n      variables: {\n        username,\n        favoriteGenre,\n        password\n      }\n    })\n\n    props.setPage('authors')\n  }\n\n  const width = {\n    width: '100px'\n  }\n\n  return (\n    <div className='col-auto'>\n      <br />\n      <h2 data-toggle='tooltip' data-placement='top' title='create account page' aria-label='create account page'>\n        create account\n      </h2>\n      <form onSubmit={submit}>\n        <div className='form-group'>\n          <label style={width}>username:</label>\n          <input autoFocus\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set username' aria-label='set username'\n          />\n        </div>\n        <div className='form-group'>\n          <label style={width}>favorite genre:</label>\n          <input\n            value={favoriteGenre}\n            onChange={({ target }) => setFavGenre(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set favorite genre' aria-label='set favorite genre'\n          />\n        </div>\n        <div className='form-group'>\n          <label style={width}>password:</label>\n          <input\n            type='password'\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n            data-toggle='tooltip' data-placement='top' title='set password' aria-label='set password'\n          />\n        </div>\n        <button className='btn btn-raised btn-primary mr-1' type='submit'\n          data-toggle='tooltip' data-placement='top' title='submit' aria-label='submit'>\n          submit\n        </button>\n        <button className='btn btn-raised btn-primary' type='button' onClick={() => props.setPage('authors')}\n          data-toggle='tooltip' data-placement='top' title='cancel' aria-label='cancel'>\n          cancel\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default UserForm\n","import React from 'react'\n\nconst Recommended = (props) => {\n\n  if (!props.show) {\n    return null\n  }\n\n  const padding = {\n    paddingRight: '10px'\n  }\n\n  const alignRight = {\n    float: 'right'\n  }\n\n  const rightPadding = {\n    paddingRight: '5px'\n  }\n\n  const fontStyle = {\n    fontFamily: 'Verdana, Geneva, Tahoma, sans-serif'\n  }\n\n  return (\n    <div>\n      <br />\n      <h2 data-toggle='tooltip' data-placement='top' title='recommendations page' aria-label='recommendations page'>\n        recommendations\n      </h2>\n      <br />\n      {props.favoriteBooks.length > 0\n      ? <>\n        <div style={fontStyle}>books in your favorite genre<span style={rightPadding}></span>\n          <b data-toggle='tooltip' data-placement='top' title={props.favoriteGenre} aria-label={props.favoriteGenre}>\n            {props.favoriteGenre}:</b><br /><br />\n        </div>\n\n        <table>\n          <tbody>\n            <tr>\n              <th style={padding}></th>\n              <th style={padding}\n                data-toggle='tooltip' data-placement='top' title='author' aria-label='author'>\n                author\n              </th>\n              <th data-toggle='tooltip' data-placement='top' title='published' aria-label='published'>\n                published\n              </th>\n            </tr>\n            {props.favoriteBooks.map((b,v,i) =>\n              <tr key={v}>\n                <td style={padding}\n                  data-toggle='tooltip' data-placement='top' title={b.title} aria-label={b.title}>\n                  <em>{b.title}</em>\n                </td>\n                <td style={padding}\n                  data-toggle='tooltip' data-placement='top' title={b.author.name} aria-label={b.author.name}>\n                  {b.author.name}\n                </td>\n                <td style={alignRight}\n                  data-toggle='tooltip' data-placement='top' title={b.published} aria-label={b.published}>\n                  {b.published}\n                </td>\n              </tr>\n              )\n            }\n          </tbody>\n        </table>\n        </>\n      : \n        <div style={fontStyle}>no recommendations for your favorite genre<span style={rightPadding}></span>\n          <b data-toggle='tooltip' data-placement='top' title={props.favoriteGenre} aria-label={props.favoriteGenre}>\n            {props.favoriteGenre}:</b><br /><br />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Recommended\n","import React, { useState, useEffect } from 'react'\nimport { useApolloClient, useQuery, useLazyQuery, useSubscription } from '@apollo/client'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faSignInAlt, faSignOutAlt, faUserPlus, faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport Authors from './components/Authors'\nimport Books from './components/Books'\nimport BookForm from './components/BookForm'\nimport Footer from './components/Footer'\nimport { Notify, NotifyError } from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport UserForm from './components/UserForm'\nimport Recommended from './components/Recommended'\nimport { ALL_BOOKS, ALL_AUTHORS, FAVORITE_BOOKS, BOOK_ADDED, AUTHOR_EDITED, CURRENT_USER } from './queries'\n\nconst App = () => {\n\n  const client = useApolloClient()\n  const allAuthorsResult = useQuery(ALL_AUTHORS)\n  const allBooksResult = useQuery(ALL_BOOKS)\n\n  const [allAuthors, setAllAuthors] = useState([])\n  const [allBooks, setAllBooks] = useState([])\n\n  const [token, setToken] = useState(localStorage.getItem('library-user-token'))\n\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [page, setPage] = useState('authors')\n\n  const [getFavoriteBooks, resultBooks] = useLazyQuery(FAVORITE_BOOKS) \n  const [favoriteBooks, setFavoriteBooks] = useState([])\n\n  const [getUser, resultUser] = useLazyQuery(CURRENT_USER)\n  const [favoriteGenre, setFavoriteGenre] = useState('')\n\n  const [optedGenre, setGenre] = useState('all')\n  const [bookUpdateCache, setBookupdateCache] = useState(null)\n  const [authorUpdateCache, setAuthorupdateCache] = useState([])\n\n  useEffect(() => {\n    if (allAuthorsResult.data) {\n      setAllAuthors(allAuthorsResult.data.allAuthors)\n    }\n  }, [allAuthorsResult])\n\n  useEffect(() => {\n    if (allBooksResult.data) {\n      setAllBooks(allBooksResult.data.allBooks)\n    }\n  }, [allBooksResult])\n\n  useEffect(() => {\n    if (resultUser.data && resultUser.data.me) {\n      setFavoriteGenre(resultUser.data.me.favoriteGenre)\n    }\n  }, [resultUser])\n\n  useEffect(() => {\n    if (resultBooks.data ) {\n      setFavoriteBooks(resultBooks.data.favorites)\n    }\n  }, [resultBooks])\n\n  const updateBookCacheWith = (addedBook) => {\n    const includedIn = (set, object) => \n      set.map(p => p.id).includes(object.id)  \n\n    const dataInStore = client.readQuery({ query: ALL_BOOKS })\n    if (!includedIn(dataInStore.allBooks, addedBook)) {\n      client.writeQuery({\n        query: ALL_BOOKS,\n        data: { allBooks : dataInStore.allBooks.concat(addedBook) }\n      })\n    }\n  }\n\n  const updateAuthorCacheWith = (editedAuthors) => {\n    client.writeQuery({\n      query: ALL_AUTHORS,\n      data: { allAuthors : editedAuthors }\n    })\n  }\n\n  useSubscription(BOOK_ADDED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      const addedBook = subscriptionData.data.bookAdded\n      updateBookCacheWith(addedBook)\n      setBookupdateCache(addedBook)\n      setAllBooks(allBooks.concat(addedBook))\n      notify(`${addedBook.title} added`)\n    }\n  })\n\n  useSubscription(AUTHOR_EDITED, {\n    onSubscriptionData: ({ subscriptionData }) => {\n      const editedAuthor = subscriptionData.data.authorEdited\n      updateAuthorCacheWith(editedAuthor)\n      setAuthorupdateCache(editedAuthor)\n      notify(`author birthyear edited`)\n    }\n  })\n\n  const notify = (message) => {\n    setMessage(message)\n    setTimeout(() => {\n      setMessage(null)\n    }, 10000)\n  }\n\n  const notifyError = (errorMessage) => {\n    setErrorMessage(errorMessage)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 10000)\n  }\n\n  const logout = () => {\n    setPage('authors')\n    setToken(null)\n    localStorage.clear()\n    client.clearStore()\n  }\n\n  if (allAuthorsResult.loading || allBooksResult.loading || resultUser.loading || resultBooks.loading)  {\n    return <div className='container'><br /><br /><br /><center>\n      <FontAwesomeIcon icon={faSpinner} size='5x' spin/>\n      </center></div>\n  }\n\n  const padding = {\n    paddingRight: '5px'\n  }\n  \n  return (\n    <>\n      <nav id='nav' className='navbar navbar-light bg-light'>\n        <a className=\"navbar-brand\" href='/'\n          data-toggle='tooltip' data-placement='top' title='Bloglist home' aria-label='Bloglist home'>\n          <span style={padding}></span><FontAwesomeIcon icon={faHome}/><strong>Bloglist</strong></a>\n        <div className='button-group'>\n          <button className='btn btn-raised btn-warning mr-1' onClick={() => setPage('authors')}\n            data-toggle='tooltip' data-placement='top' title='authors' aria-label='authors'>\n            authors\n          </button>\n          <button className='btn btn-raised btn-warning mr-1' onClick={() => setPage('books')}\n            data-toggle='tooltip' data-placement='top' title='books' aria-label='books'>\n            books\n          </button>\n          {token &&\n            <>\n              <button className='btn btn-raised btn-warning mr-1' onClick={() => setPage('addBook')}\n                data-toggle='tooltip' data-placement='top' title='add book' aria-label='add book'>\n                add book\n              </button>\n              <button className='btn btn-raised btn-warning mr-1' onClick={() => {\n                getUser()\n                getFavoriteBooks()\n                setPage('recommended')\n              }}\n              data-toggle='tooltip' data-placement='top' title='recommended' aria-label='recommended'>\n                recommended\n              </button>\n            </>\n          }\n          {!token\n            ? <><button className='btn btn-raised btn-primary mr-1' onClick={() => setPage('login')}\n                data-toggle='tooltip' data-placement='top' title='sign in' aria-label='sign in'>\n                sign in<span style={padding}></span><FontAwesomeIcon icon={faSignInAlt}/>\n              </button>\n              <button className='btn btn-raised btn-primary' onClick={() => setPage('createacc')}\n                data-toggle='tooltip' data-placement='top' title='sign up' aria-label='sign up'>\n                sign up<span style={padding}></span><FontAwesomeIcon icon={faUserPlus}/>\n              </button></>\n            : <button className='btn btn-raised btn-primary' onClick={logout}\n                data-toggle='tooltip' data-placement='top' title='sign out' aria-label='sign out'>\n                sign out<span style={padding}></span><FontAwesomeIcon icon={faSignOutAlt}/></button>\n          }\n        </div>\n      </nav>\n\n      <div className='container'>\n      <Notify message={message} />\n      <NotifyError errorMessage={errorMessage} />\n\n      <Authors\n        show={page === 'authors'}\n        notifyError={notifyError}\n        notify={notify}\n        token={token}\n        allAuthors={allAuthors}\n        updateAuthorCacheWith={updateAuthorCacheWith}\n        setAuthorupdateCache={setAuthorupdateCache}\n        authorUpdateCache={authorUpdateCache}\n      />\n\n      <Books\n        show={page === 'books'}\n        optedGenre={optedGenre}\n        setGenre={setGenre}\n        client={client}\n        allBooks={allBooks}\n        bookUpdateCache={bookUpdateCache}\n        setBookupdateCache={setBookupdateCache}\n      />\n\n      {page === 'recommended' &&\n        <Recommended\n          show={page === 'recommended'}\n          favoriteBooks={favoriteBooks}\n          favoriteGenre={favoriteGenre}\n        />\n      }\n\n      {page === 'addBook' &&\n        <BookForm\n          show={page === 'addBook'}\n          setPage={setPage}\n          notify={notify}\n          notifyError={notifyError}\n          client={client}\n          updateBookCacheWith={updateBookCacheWith}\n        />\n      }\n\n      {page === 'login' &&\n        <LoginForm\n          setToken={setToken}\n          notifyError={notifyError}\n          setPage={setPage}\n        />\n      }\n\n      {page === 'createacc' &&\n        <UserForm\n          setToken={setToken}\n          notifyError={notifyError}\n          setPage={setPage}\n        />\n      }\n\n      <Footer /><br />\n\n    </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nimport {\n  ApolloClient,\n  ApolloProvider,\n  HttpLink,\n  InMemoryCache,\n  split\n} from '@apollo/client'\nimport { setContext } from 'apollo-link-context'\nimport { getMainDefinition } from '@apollo/client/utilities'\nimport { WebSocketLink } from '@apollo/link-ws'\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('library-user-token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst httpLink = new HttpLink({ uri: 'https://graphql-library-jms.herokuapp.com' })\nconst wsLink = new WebSocketLink({\n  uri: 'ws://localhost:4000/graphql',\n  options: {\n    reconnect: true,\n    // timeout: 30000\n  }\n})\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query)\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  authLink.concat(httpLink),\n)\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: splitLink\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}